<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
	  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
	  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
	  
<mapper namespace="com.example.project_team.mappers.TransferMapper">

<!-- 한건이체 목록 조회 -->
<select id="transferList" resultType="com.example.project_team.dto.TransferDTO">
	SELECT * FROM team_transfer order by transferNum
</select>

<!-- 한건이체 상세목록  -->
<select id="transferDetail" resultType="com.example.project_team.dto.TransferDTO">
	SELECT * FROM team_transfer WHERE transferNum=#{transferNum} 
</select>

<!-- 한건이체 전 입출금 계좌조회  -->
<select id="transAccount" parameterType="String" resultType="com.example.project_team.dto.AccountDTO">
	SELECT * FROM team_account WHERE id = #{id} AND accountType = 'e' AND show = 'y'
</select>

<!-- 1건 출금 -->
<update id="outTransfer" parameterType="Map">
	UPDATE team_account
	SET balance = #{out}
	WHERE accountNum = #{accountNum}
</update>
	
<!-- balanceChk 해당 계좌 기존 잔액 가져오기  -->
<select id="balanceChk" parameterType="Map" resultType="int">
	SELECT balance FROM team_account WHERE accountNum = #{trAccountNum} 
</select>

<!-- 1건 입금 -->
<update id="insertTransfer" parameterType="Map">
	UPDATE team_account
	SET balance = #{in}
	WHERE accountNum = #{trAccountNum}
</update>

<!-- 한건이체 거래목록에 추가 -->
<insert id="addTransList" parameterType="int">
	INSERT into team_transfer(accountNum, accountType, accountLimit ,accountPW)
	values(#{accountNum},#{accountType},#{accountLimit},#{accountPW}) WHERE accountNum = #{accountNum}
</insert>

<!-- 한도변경요청 전 계좌조회  -->
<select id="limitAccount" parameterType="String" resultType="com.example.project_team.dto.AccountDTO">
	SELECT * FROM team_account WHERE id = #{id} AND accountType = 'e' 
</select>

<!-- 일일이체 한도 상향 -> 관리자 승인시 변경됨 -->
<insert id="changeLimit" parameterType="int">
	INSERT into team_account(accountNum, accountType, accountLimit ,accountPW)
	values(#{accountNum},#{accountType},#{accountLimit},#{accountPW})
</insert>

</mapper>